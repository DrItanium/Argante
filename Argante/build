#!/usr/bin/env bash

SYS=`uname -s`

echo "Configuring Argante for $SYS platform..."
rm -f conf.mk~ conf2.mk
mv conf.mk conf.mk~

echo
echo " **********************************************************************"
echo " * PLEASE READ Documentation/Portability REGARDING YOUR OPERATING     *"
echo " * SYSTEM IF YOU NOTICE ANY COMPILATION TIME OR RUNTIME PROBLEMS      *"
echo " **********************************************************************"
echo

echo -n "Remaking symbolic links..."
./make-links.sh
echo "done."

if [ "$SYS" = "Linux" ]; then
  echo "SYS=Linux" >> conf.mk
  echo "USE_PACKET=yes" >> conf.mk

  LIBC6="`ls -l /lib/libc*|grep -F -- -2.1`"
  LIBC6="$LIBC6`ls -l /lib/libc*|grep -F -- -2.2`"
  if [ "$LIBC6" = "" ]; then
    echo "WARNING: your libc subsystem is too old, reverting to old-style version."
  elif [ ! -z "$NOREADLINE" ]; then
    echo "NOTE: libreadline test disabled by user."
  elif [ -f /usr/include/readline/readline.h ]; then
    echo "USE_READLINE=yes" >> conf.mk

    if [ -f /usr/lib/libtinfo.so ]; then
        echo "USE_TINFO=yes" >> conf.mk
    fi
    echo "NOTE: libreadline detected, using it."
  else
    echo "NOTE: libreadline *NOT* detected, using old-style compilation."
  fi


ISSOL=`echo $SYS|egrep -e 'Sun|Sola|Nis'`

if [ ! "$ISSOL" = "" ]; then
  echo "SYS=Solaris" >> conf.mk
  PATH="/usr/local/gnu/bin/:/usr/local/bin:$PATH"
fi

ISBSD=`echo $SYS|grep 'BSD'`

if [ ! "$ISBSD" = "" ]; then
  echo "SYS=BSD" >> conf.mk
  test "$SYS" = "OpenBSD" || echo "LDLIBS+=-Xlinker -export-dynamic" >> conf.mk
fi

ISIRX=`echo $SYS|grep 'IRIX'`

if [ ! "$ISIRX" = "" ]; then
  echo "SYS=IRIX" >> conf.mk
fi

ISAIX=`echo $SYS| grep 'AIX'`

if [ ! "$ISAIX" = "" ]; then
  echo "SYS=AIX" >> conf.mk
fi

if [ ! -e conf.mk ]; then
echo
echo "ERROR:"
echo "  Argante has not been tested with your system (`uname -s`)."
echo "  Please run (g)make anyway, cross your fingers, and report this."
exit 1
fi

# SSL tests
# FIXME: Overrides?
#if [ -z "$NOSSL" ]; then
#	echo ">>> Performing SSL detection..."
#	# /usr/bin/which is broken, for me.
#	OPENSSLLOC=`type -path openssl` 2>/dev/null
#	if [ -z "$OPENSSLLOC" ]; then
#		echo ">>> OpenSSL executable not found in \$PATH, SSL unused."
#	else
#		# No typo, we do it twice (/bin/openssl)
#		OPENSSLLOC=`dirname $OPENSSLLOC`
#		OPENSSLLOC=`dirname $OPENSSLLOC`
#		echo ">>> OpenSSL found in $OPENSSLLOC..."
#		echo "Using includes as $OPENSSLLOC/include, libs as $OPENSSLLOC/lib"
#		echo "USE_SSL=YES" >> conf.mk
#		echo "SSL_INCLUDES=-I$OPENSSLLOC/include" >> conf.mk
#		echo "SSL_LIBS=-L$OPENSSLLOC/lib" >> conf.mk
#	fi
#else
	echo "NOTE: SSL test disabled by user."
#fi

# GTK test
if [ -z "$NOGTK" ]; then
	echo ">>> Performing GTK compatibility test..."

	rm -f setup/gtk-test
	gcc `gtk-config --libs` `gtk-config --cflags` setup/gtk-test.c -o setup/gtk-test >/dev/null 2>&1

	if [ ! -x setup/gtk-test ]; then
		echo ">>> Test failed, compiling without GTK interface."
	else
		echo ">>> Test successful, compiling with GTK interface."
		echo "USE_GTK=YES" >> conf.mk
	fi
	
	rm -f setup/gtk-test 
else
	echo "NOTE: GTK test disabled by user."
fi

# ncurses test
if [ -z "$NOCURSES" ]; then
	echo ">>> Performing curses compatibility test..."

	rm -f setup/curses-test
	gcc -lcurses setup/curses-test.c -o setup/curses-test >/dev/null 2>&1

	if [ ! -x setup/curses-test ]; then
		echo ">>> Test failed, compiling without curses interface."
	else
		echo ">>> Test successful, compiling with curses interface."
		echo "USE_CURSES=YES" >> conf.mk
	fi

	rm -f setup/curses-test
else
	echo "NOTE: Curses test disabled by user."
fi

# Arch test.
# 
echo ">>> Performing architecture check..."
ARCH=`uname -m`
if grep -q $ARCH .valid-arch; then
  echo ">>> GCC-supported architecture detected, using -m"$ARCH"..."
  echo "ARCH="$ARCH >> conf.mk
else
  echo "+>> I'm not adding any GCC -m flags."
  echo "+>> If there is a -m"$ARCH" GCC flag, add your architecture"
  echo "+>> to .valid-arch."
fi

# Has the config changed, and needs a cleanup?
if [ -e conf.mk~ ]; then
  if cmp conf.mk~ conf.mk 2>&1 >/dev/null; then
    echo "Config files are identical!!!"
  else
    echo "Config files are different. Cleaning:"
    mv conf.mk conf2.mk
    mv conf.mk~ conf.mk
    gmake clean
    mv conf2.mk conf.mk
  fi
fi

echo "Argante is now configured for your system. (I hope.)"
echo "Just run GNU make now to build."

