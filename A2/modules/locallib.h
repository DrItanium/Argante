/* Autogenerated, please edit locallib.c */
#include "modload.h"
#ifndef STATIC
int module_init
#else
int locallib_init
#endif
(unsigned lid) {
	if (module_internal_init(lid)) return 1;
	register_syscall(301, local_gettime); /* LOCAL_GETTIME */
	register_syscall(302, local_timetostr); /* LOCAL_TIMETOSTR */
	register_syscall(303, local_gethostname); /* LOCAL_GETHOSTNAME */
	register_syscall(304, local_stat_vs); /* LOCAL_VS_STAT */
	register_syscall(305, local_stat_rs); /* LOCAL_RS_STAT */
	register_syscall(306, local_getrandom); /* LOCAL_GETRANDOM */
	return 0;
}

#ifndef STATIC
void module_vcpu_start
#else
void locallib_vcpu_start
#endif
(struct vcpu *cpu) { module_internal_vcpu_start(cpu); }

#ifndef STATIC
void module_vcpu_stop
#else
void locallib_vcpu_stop
#endif
(struct vcpu *cpu) { module_internal_vcpu_stop(cpu); }

#ifndef STATIC
void module_shutdown
#else
void locallib_shutdown
#endif
() {
	module_internal_shutdown();	unregister_syscall(301); /* local_gettime */
	unregister_syscall(302); /* local_timetostr */
	unregister_syscall(303); /* local_gethostname */
	unregister_syscall(304); /* local_stat_vs */
	unregister_syscall(305); /* local_stat_rs */
	unregister_syscall(306); /* local_getrandom */
}

