/* Autogenerated, please edit dummy.c */
#include "modload.h"
#ifndef STATIC
int module_init
#else
int dummy_init
#endif
(unsigned lid) {
	if (module_internal_init(lid)) return 1;
	register_syscall(901, fs_open); /* DUMMY_OPEN */
	register_syscall(902, fs_close); /* DUMMY_CLOSE */
	return 0;
}

#ifndef STATIC
void module_vcpu_start
#else
void dummy_vcpu_start
#endif
(struct vcpu *cpu) { module_internal_vcpu_start(cpu); }

#ifndef STATIC
void module_vcpu_stop
#else
void dummy_vcpu_stop
#endif
(struct vcpu *cpu) { module_internal_vcpu_stop(cpu); }

#ifndef STATIC
void module_shutdown
#else
void dummy_shutdown
#endif
() {
	module_internal_shutdown();	unregister_syscall(901); /* fs_open */
	unregister_syscall(902); /* fs_close */
}

#ifndef STATIC
#ifdef MODULE_RELOAD_VER
int module_reload_ver=MODULE_RELOAD_VER;
#endif
#endif
