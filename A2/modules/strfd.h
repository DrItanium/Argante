/* Autogenerated, please edit strfd.c */
#include "modload.h"
#ifndef STATIC
int module_init
#else
int strfd_init
#endif
(unsigned lid) {
	if (module_internal_init(lid)) return 1;
	register_syscall(401, strfd_open); /* STRFD_OPEN */
	register_syscall(402, strfd_create); /* STRFD_CREATE */
	register_syscall(403, strfd_close); /* STRFD_CLOSE */
	register_syscall(404, strfd_get_offset); /* STRFD_GET_OFFSET */
	register_syscall(405, strfd_set_offset); /* STRFD_SET_OFFSET */
	register_syscall(406, strfd_get_addr); /* STRFD_GET_ADDR */
	register_syscall(407, strfd_get_size); /* STRFD_GET_SIZE */
	register_syscall(408, strfd_read); /* STRFD_READ */
	register_syscall(409, strfd_write); /* STRFD_WRITE */
	register_syscall(410, strfd_getchar); /* STRFD_GETCHAR */
	register_syscall(411, strfd_setchar); /* STRFD_SETCHAR */
	register_syscall(412, strfd_strchr); /* STRFD_STRCHR */
	register_syscall(413, strfd_strstr); /* STRFD_STRSTR */
	register_syscall(414, strfd_strcmp); /* STRFD_STRCMP */
	return 0;
}

#ifndef STATIC
void module_vcpu_start
#else
void strfd_vcpu_start
#endif
(struct vcpu *cpu) { module_internal_vcpu_start(cpu); }

#ifndef STATIC
void module_vcpu_stop
#else
void strfd_vcpu_stop
#endif
(struct vcpu *cpu) { module_internal_vcpu_stop(cpu); }

#ifndef STATIC
void module_shutdown
#else
void strfd_shutdown
#endif
() {
	module_internal_shutdown();	unregister_syscall(401); /* strfd_open */
	unregister_syscall(402); /* strfd_create */
	unregister_syscall(403); /* strfd_close */
	unregister_syscall(404); /* strfd_get_offset */
	unregister_syscall(405); /* strfd_set_offset */
	unregister_syscall(406); /* strfd_get_addr */
	unregister_syscall(407); /* strfd_get_size */
	unregister_syscall(408); /* strfd_read */
	unregister_syscall(409); /* strfd_write */
	unregister_syscall(410); /* strfd_getchar */
	unregister_syscall(411); /* strfd_setchar */
	unregister_syscall(412); /* strfd_strchr */
	unregister_syscall(413); /* strfd_strstr */
	unregister_syscall(414); /* strfd_strcmp */
}

