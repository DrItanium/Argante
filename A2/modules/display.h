/* Autogenerated, please edit display.c */
#include "modload.h"
#ifndef STATIC
int module_init
#else
int display_init
#endif
(unsigned lid) {
	if (module_internal_init(lid)) return 1;
	register_syscall(1, io_putstring); /* IO_PUTSTRING */
	register_syscall(2, io_putint); /* IO_PUTINT */
	register_syscall(3, io_putchar); /* IO_PUTCHAR */
	register_syscall(4, io_putfloat); /* IO_PUTFLOAT */
	register_syscall(5, io_puthex); /* IO_PUTHEX */
	return 0;
}

#ifndef STATIC
void module_vcpu_start
#else
void display_vcpu_start
#endif
(struct vcpu *cpu) { module_internal_vcpu_start(cpu); }

#ifndef STATIC
void module_vcpu_stop
#else
void display_vcpu_stop
#endif
(struct vcpu *cpu) { module_internal_vcpu_stop(cpu); }

#ifndef STATIC
void module_shutdown
#else
void display_shutdown
#endif
() {
	module_internal_shutdown();	unregister_syscall(1); /* io_putstring */
	unregister_syscall(2); /* io_putint */
	unregister_syscall(3); /* io_putchar */
	unregister_syscall(4); /* io_putfloat */
	unregister_syscall(5); /* io_puthex */
}

