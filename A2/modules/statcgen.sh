#!/bin/sh
#
# A2 Virtual Machine - Module autogenerator
# Copyright (c) 2001	James Kehl <ecks@optusnet.com.au>
# 
# This library is free software; you can redistribute it and/or modify it
# under the terms of the GNU Library General Public License as published
# by the Free Software Foundation; version 2 of the License, with the
# added restriction that it may only be converted to the version 2 of the
# GNU General Public License.
# 
# This library is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Library General Public License for more details.
# 
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.
#

# This is to autocreate the statically-linked 'loader'
#

cat << EOF
/* Autogenerated, edit something else! */
#include "autocfg.h"
#include "taskman.h"
#include "modload.h"
#define MINUS1 (unsigned) -1
#ifndef NULL
#define NULL (void *) 0
#endif
EOF

for A in $*; do {
echo "int "$A"_init(unsigned lid);"
echo "void "$A"_vcpu_start(struct vcpu *cpu);"
echo "void "$A"_vcpu_stop(struct vcpu *cpu);"
echo "void "$A"_shutdown();"
} done

echo "void module_static_init() {"
echo "	unsigned lid=MINUS1;"

# Well... errors could occur but what can you do? Fail the whole pack!?
for A in $*; do {
cat << EOF
	if (lid==MINUS1) {
		lid=lid_create();
		if (lid==MINUS1) return;
	}
EOF
echo "if (!"$A"_init(lid)) {"
echo "	lid_assign(lid, NULL, \"$A\", "$A"_vcpu_start, "$A"_vcpu_stop);"
echo "	lid=MINUS1;"
echo "}"
} done
echo "}"

echo "int module_dyn_load(char *a) { return -1; }"
echo "int module_dyn_unload(unsigned lid) { return -1; }"
echo "int module_dyn_reload(unsigned lid) { return -1; }"
