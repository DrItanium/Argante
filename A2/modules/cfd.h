/* Autogenerated, please edit cfd.c */
#include "modload.h"
#ifndef STATIC
int module_init
#else
int cfd_init
#endif
(unsigned lid) {
	if (module_internal_init(lid)) return 1;
	register_syscall(501, cfd_close); /* CFD_CLOSE */
	register_syscall(510, cfd_read); /* CFD_READ */
	register_syscall(520, cfd_write); /* CFD_WRITE */
	register_syscall(521, cfd_write_nt); /* CFD_WRITE_NT */
	register_syscall(522, cfd_write_char); /* CFD_WRITE_CHAR */
	register_syscall(523, cfd_write_int); /* CFD_WRITE_INT */
	register_syscall(524, cfd_write_uint); /* CFD_WRITE_UINT */
	register_syscall(525, cfd_write_hex); /* CFD_WRITE_HEX */
	register_syscall(526, cfd_write_oct); /* CFD_WRITE_OCT */
	register_syscall(527, cfd_write_float); /* CFD_WRITE_FLOAT */
	return 0;
}

#ifndef STATIC
void module_vcpu_start
#else
void cfd_vcpu_start
#endif
(struct vcpu *cpu) { module_internal_vcpu_start(cpu); }

#ifndef STATIC
void module_vcpu_stop
#else
void cfd_vcpu_stop
#endif
(struct vcpu *cpu) { module_internal_vcpu_stop(cpu); }

#ifndef STATIC
void module_shutdown
#else
void cfd_shutdown
#endif
() {
	module_internal_shutdown();	unregister_syscall(501); /* cfd_close */
	unregister_syscall(510); /* cfd_read */
	unregister_syscall(520); /* cfd_write */
	unregister_syscall(521); /* cfd_write_nt */
	unregister_syscall(522); /* cfd_write_char */
	unregister_syscall(523); /* cfd_write_int */
	unregister_syscall(524); /* cfd_write_uint */
	unregister_syscall(525); /* cfd_write_hex */
	unregister_syscall(526); /* cfd_write_oct */
	unregister_syscall(527); /* cfd_write_float */
}

