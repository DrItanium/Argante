/* Autogenerated, please edit alib.c */
#include "modload.h"
#ifndef STATIC
int module_init
#else
int alib_init
#endif
(unsigned lid) {
	if (module_internal_init(lid)) return 1;
	register_syscall(1901, alib_open); /* ALIB_OPEN */
	register_syscall(1902, alib_lookup); /* ALIB_LOOKUP */
	register_syscall(1903, alib_close); /* ALIB_CLOSE */
	return 0;
}

#ifndef STATIC
void module_vcpu_start
#else
void alib_vcpu_start
#endif
(struct vcpu *cpu) { module_internal_vcpu_start(cpu); }

#ifndef STATIC
void module_vcpu_stop
#else
void alib_vcpu_stop
#endif
(struct vcpu *cpu) { module_internal_vcpu_stop(cpu); }

#ifndef STATIC
void module_shutdown
#else
void alib_shutdown
#endif
() {
	module_internal_shutdown();	unregister_syscall(1901); /* alib_open */
	unregister_syscall(1902); /* alib_lookup */
	unregister_syscall(1903); /* alib_close */
}

